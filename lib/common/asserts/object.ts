//
// For object assertions, they are generated by defineObject / dataGuard functions.
// Here we only supply isOptional
//

import { Predicate } from '../types'


/**
 * Checks if a value is either null, undefined, or satisfies the provided simple object predicate
 * - Intended for user generated TS data objects residing inside other interfaces
 *
 * @template T The expected type of the object
 * @param value - The value to check
 * @param predicate - The type guard function to check if the value is of type T
 * @returns A type predicate indicating whether the value is null, undefined, or of type T
 */
export const isOptionalObject = <T>(value: unknown, predicate: Predicate<T>): value is T | null | undefined =>
	value == null ||
	predicate(value)
